/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
                td0: BSPC_DEL{
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <100>;
                bindings = <&kp BSPC>, <&kp DEL>;
                };

                td1: TAB_ESC{
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp TAB>, <&kp ESC>;
                };

                td2: CAPS_SHIFT {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp CAPS>, <&kp LSHFT>;
                };

                td3: QUOTE_SHIFT {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp SQT>, <&kp RSHFT>;
                };
        };

        //combos {
          //      compatible = "zmk,combos";
            //    combo_esc {
        //                timeout-ms = <50>;
        //             key-positions = <1 2>;
        //                bindings = <&kp ESC>;
        //        };
        //};


        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB/ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP/DEL |
// | CAPS/SHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '/SHIFT   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
//                    | SHIFT | SPC | LWR |   | RSE | ENT  |   SHIFT |
                        bindings = <
   &td1   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &td0 
   &td2  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &td3 
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RALT
                  &kp LSHFT &kp SPACE &mo 1  &mo 2 &kp RET  &kp RSHFT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  F1  |  F2  |  F3  |  F4  |  F5  | F6  |   7  |  8  |  9  |       |        | DEL   |
// |  F7|   F8  |  F9  |  F10  |  F11 | F12 |   4  |  5  |  6  |  HOME |  UP    | END   |
// |  BTCLR| BT1 | BT2 | BT3 | BT4| | BT5|  |   1  |  2  |  3  |  LEFT | DOWN   | RIGHT |
//                    | SHIFT | SPC |    |  |   | 0 |   ENT |
                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp N7 &kp N8 &kp N9 &trans &trans &kp DEL
   &kp F7 &kp F8 &kp F9 &kp F10  &kp F11 &kp F12 &kp N4 &kp N5 &kp N6 &kp HOME &kp UP &kp END
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp N1 &kp N2 &kp N3 &kp LEFT &kp DOWN &kp RIGHT
                                    &kp LSHFT &kp SPACE  &trans           &trans  &kp N0 &kp RET  
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CAPS |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | CTRL |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | SHIFT| SPC|     |    |  ENT | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp CAPSLOCK &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LSHFT &kp SPACE &trans         &trans  &kp RET  &kp RALT
                        >;
                };

                
                
                
        };
};