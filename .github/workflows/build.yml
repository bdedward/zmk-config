name: Build Corne Split Firmware

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  ZEPHYR_SDK_VERSION: 0.17.4
  ZEPHYR_SDK_INSTALL_DIR: /opt/zephyr-sdk

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your config
      - name: Checkout config
        uses: actions/checkout@v3

      # 2. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3a. Cache APT lists
      - name: Cache APT lists
        uses: actions/cache@v3
        with:
          path: /var/lib/apt/lists
          key: ${{ runner.os }}-apt-lists
      # 3b. Cache APT archives
      - name: Cache APT archives
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-archives

      # 4. Install system deps
      - name: Install system dependencies
        run: |
          if [ -z "$(ls -A /var/lib/apt/lists)" ]; then
            sudo apt-get update
          fi
          sudo apt-get install --yes \
            ninja-build gperf ccache dfu-util device-tree-compiler \
            python3-setuptools wget file unzip

      # 5. Cache pip
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      # 6. Install West & pyelftools
      - name: Install West & Python deps
        run: |
          python3 -m pip install --upgrade pip
          pip install west pyelftools

      # 7. Cache Zephyr SDK
      - name: Cache Zephyr SDK
        id: cache-zephyr-sdk
        uses: actions/cache@v3
        with:
          path: ${{ env.ZEPHYR_SDK_INSTALL_DIR }}
          key: ${{ runner.os }}-zephyr-sdk-v${{ env.ZEPHYR_SDK_VERSION }}
          restore-keys: |
            ${{ runner.os }}-zephyr-sdk-

      # 8. Install Zephyr SDK on cache miss
      - name: Install Zephyr SDK
        if: steps.cache-zephyr-sdk.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZEPHYR_SDK_VERSION}/zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-x86_64.tar.xz
          sudo mkdir -p $ZEPHYR_SDK_INSTALL_DIR
          sudo tar xf zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-x86_64.tar.xz \
            -C $ZEPHYR_SDK_INSTALL_DIR --strip-components=1
          cd $ZEPHYR_SDK_INSTALL_DIR
          sudo ./setup.sh -h -c -t all

      # 9. Export Zephyr SDK vars
      - name: Export Zephyr SDK env
        run: |
          echo "ZEPHYR_SDK_INSTALL_DIR=${ZEPHYR_SDK_INSTALL_DIR}" >> $GITHUB_ENV
          echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV

      # 10. Cache ccache
      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('config/**') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      # 11. Enable ccache
      - name: Enable ccache
        run: |
          echo "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
          echo "ZEPHYR_CCACHE=1" >> $GITHUB_ENV

      # 12. Clone ZMK firmware
      - name: Clone ZMK firmware
        run: git clone --depth 1 --branch main https://github.com/zmkfirmware/zmk.git zmk

      # 13. Init & update with West
      - name: Initialize ZMK with West
        run: |
          cd zmk
          west init -l app
          west update

      # 14. Patch picolibc to avoid duplicate __lock___libc_recursive_mutex
      - name: Patch picolibc mutex conflict
        run: |
          sed -i 's|^K_MUTEX_DEFINE(__lock___libc_recursive_mutex);|// disabled to avoid conflicting definition|g' \
            zmk/zephyr/lib/libc/picolibc/libc-hooks.c

      # 15a. Build Left (Peripheral)
      - name: Build Left (Peripheral)
        run: |
          cd zmk/app
          west build -d ../../build-left -b nice_nano_v2 -- \
            -DZMK_CONFIG=../../config \
            -DSHIELD="corne_left nice_view_adapter nice_view" \
            -DCONFIG_ZMK_SPLIT=y

      # 15b. Build Right (Central + USB HID)
      - name: Build Right (Central + USB HID)
        run: |
          cd zmk/app
          west build -d ../../build-right -b nice_nano_v2 -- \
            -DZMK_CONFIG=../../config \
            -DSHIELD="corne_right nice_view_adapter nice_view" \
            -DCONFIG_ZMK_SPLIT=y \
            -DCONFIG_ZMK_SPLIT_ROLE_CENTRAL=y \
            -DCONFIG_ZMK_USB=y

      # 16. Upload Left UF2
      - name: Upload corne_left.uf2
        uses: actions/upload-artifact@v4
        with:
          name: corne_left.uf2
          path: build-left/zephyr/zephyr.uf2

      # 17. Upload Right UF2
      - name: Upload corne_right.uf2
        uses: actions/upload-artifact@v4
        with:
          name: corne_right.uf2
          path: build-right/zephyr/zephyr.uf2
